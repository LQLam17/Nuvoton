<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\bsp_nuc220xx.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\bsp_nuc220xx.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6140002: Last Updated: Thu Feb 13 14:33:06 2025
<BR><P>
<H3>Maximum Stack Usage =        204 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; bsp_nu220x_systems_init &rArr; SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ACMP_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[1a]">CAN0_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[1b]">CAN1_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[24]">Default_Handler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[8]">EINT0_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[9]">EINT1_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[a]">GPAB_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[b]">GPCDEF_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from retarget.o(.text.HardFault_Handler) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[29]">Hard_Fault_Handler</a> from retarget.o(.text.Hard_Fault_Handler) referenced from retarget.o(.text.HardFault_Handler)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[21]">I2S_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[20]">PDMA_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[1e]">PS2_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[c]">PWMA_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[d]">PWMB_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[22]">PWRWU_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[25]">RTC_IRQHandler</a> from bsp_nuc220x_rtc.o(.text.RTC_IRQHandler) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[1c]">SC012_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[14]">SPI0_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[15]">SPI1_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[16]">SPI2_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[17]">SPI3_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_nuc200series.o(.text.SystemInit) referenced from startup_nuc200series.o(.text)
 <LI><a href="#[e]">TMR0_IRQHandler</a> from bsp_nuc220x_system.o(.text.TMR0_IRQHandler) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[f]">TMR1_IRQHandler</a> from bsp_nuc220x_system.o(.text.TMR1_IRQHandler) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[10]">TMR2_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[11]">TMR3_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[12]">UART02_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[1d]">USBD_IRQHandler</a> from startup_nuc200series.o(.text) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[7]">WDT_IRQHandler</a> from bsp_nuc220x_system.o(.text.WDT_IRQHandler) referenced from startup_nuc200series.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nuc200series.o(.text)
 <LI><a href="#[2a]">fputc</a> from retarget.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[26]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[39]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[73]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[74]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[75]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[76]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[77]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPAB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPCDEF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PWMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SC012_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[78]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[79]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[7c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[32]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3c]"></a>BL_CalCheckSum</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp_nuc220x_bootloader.o(.text.BL_CalCheckSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BL_CalCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Mem_Write_Handle
</UL>

<P><STRONG><a name="[3b]"></a>BL_Cmd_Mem_Write_Handle</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, bsp_nuc220x_bootloader.o(.text.BL_Cmd_Mem_Write_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BL_Cmd_Mem_Write_Handle &rArr; BL_Mem_Write &rArr; FMC_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Mem_Write
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_CalCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Process
</UL>

<P><STRONG><a name="[3e]"></a>BL_Cmd_Update_Firmware_Handle</STRONG> (Thumb, 228 bytes, Stack size 56 bytes, bsp_nuc220x_bootloader.o(.text.BL_Cmd_Update_Firmware_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BL_Cmd_Update_Firmware_Handle &rArr; FMC_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Write
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetVectorPageAddr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Read
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Process
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PreProcess
</UL>

<P><STRONG><a name="[43]"></a>BL_Enable_APROM_Update</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_nuc220x_bootloader.o(.text.BL_Enable_APROM_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BL_Enable_APROM_Update
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>BL_Mem_Write</STRONG> (Thumb, 144 bytes, Stack size 64 bytes, bsp_nuc220x_bootloader.o(.text.BL_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BL_Mem_Write &rArr; FMC_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Write
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Mem_Write_Handle
</UL>

<P><STRONG><a name="[45]"></a>BL_PreProcess</STRONG> (Thumb, 592 bytes, Stack size 48 bytes, bsp_nuc220x_bootloader.o(.text.BL_PreProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BL_PreProcess &rArr; BL_Cmd_Update_Firmware_Handle &rArr; FMC_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Update_Firmware_Handle
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Write
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Read
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Erase
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>BL_Process</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, bsp_nuc220x_bootloader.o(.text.BL_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BL_Process &rArr; BL_Cmd_Mem_Write_Handle &rArr; BL_Mem_Write &rArr; FMC_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Update_Firmware_Handle
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Mem_Write_Handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_send_data
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_receive_data
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, clk.o(.text.CLK_EnableModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_TIMER0_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systems_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_init
</UL>

<P><STRONG><a name="[49]"></a>CLK_EnablePLL</STRONG> (Thumb, 528 bytes, Stack size 80 bytes, clk.o(.text.CLK_EnablePLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = CLK_EnablePLL &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[5c]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, clk.o(.text.CLK_EnableXtalRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLK_EnableXtalRC
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[4f]"></a>CLK_SetCoreClock</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, clk.o(.text.CLK_SetCoreClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[50]"></a>CLK_SetHCLK</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, clk.o(.text.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[55]"></a>CLK_SetModuleClock</STRONG> (Thumb, 324 bytes, Stack size 44 bytes, clk.o(.text.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_TIMER0_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
</UL>

<P><STRONG><a name="[4a]"></a>CLK_WaitClockReady</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, clk.o(.text.CLK_WaitClockReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CLK_WaitClockReady
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[44]"></a>FMC_Open</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fmc.o(.text.FMC_Open))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Enable_APROM_Update
</UL>

<P><STRONG><a name="[6a]"></a>GPIO_SetMode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gpio.o(.text.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, retarget.o(.text.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HardFault_Handler &rArr; Hard_Fault_Handler &rArr; stackDump &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>Hard_Fault_Handler</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, retarget.o(.text.Hard_Fault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Hard_Fault_Handler &rArr; stackDump &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> retarget.o(.text.HardFault_Handler)
</UL>
<P><STRONG><a name="[25]"></a>RTC_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_nuc220x_rtc.o(.text.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SB_Timer1_Init</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, bsp_nuc220x_system.o(.text.SB_Timer1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SB_Timer1_Init &rArr; TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
</UL>

<P><STRONG><a name="[5b]"></a>SYS_Init</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_nuc220x_system.o(.text.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systems_init
</UL>

<P><STRONG><a name="[57]"></a>SYS_ResetModule</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, sys.o(.text.SYS_ResetModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SYS_ResetModule
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
</UL>

<P><STRONG><a name="[5d]"></a>SendChar</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, retarget.o(.text.SendChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SendChar &rArr; SendChar_ToUART
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5e]"></a>SendChar_ToUART</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, retarget.o(.text.SendChar_ToUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SendChar_ToUART
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[51]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, system_nuc200series.o(.text.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc200series.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>TIMER_GetModuleClock</STRONG> (Thumb, 164 bytes, Stack size 60 bytes, timer.o(.text.TIMER_GetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIMER_GetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[58]"></a>TIMER_Open</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, timer.o(.text.TIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
</UL>

<P><STRONG><a name="[e]"></a>TMR0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_nuc220x_system.o(.text.TMR0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TMR0_IRQHandler &rArr; TIMER_GetIntFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetIntFlag
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ClearIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_nuc220x_system.o(.text.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TMR1_IRQHandler &rArr; TIMER_GetIntFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetIntFlag
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ClearIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>UART_Open</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, uart.o(.text.UART_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UART_Open &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_init
</UL>

<P><STRONG><a name="[7]"></a>WDT_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_nuc220x_system.o(.text.WDT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WDT_IRQHandler &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>bsp_nu220x_systems_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_nuc220x_system.o(.text.bsp_nu220x_systems_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = bsp_nu220x_systems_init &rArr; SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>bsp_nu220x_systick_enable</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, bsp_nuc220x_system.o(.text.bsp_nu220x_systick_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = bsp_nu220x_systick_enable &rArr; SB_Timer1_Init &rArr; TIMER_Open &rArr; TIMER_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_TIMER0_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Start
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systems_init
</UL>

<P><STRONG><a name="[66]"></a>bsp_nuc220x_TIMER0_init</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, bsp_nuc220x_system.o(.text.bsp_nuc220x_TIMER0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = bsp_nuc220x_TIMER0_init &rArr; CLK_SetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
</UL>

<P><STRONG><a name="[69]"></a>bsp_nuc220x_UART_init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, bsp_nuc220x_uart.o(.text.bsp_nuc220x_UART_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = bsp_nuc220x_UART_init &rArr; UART_Open &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>bsp_nuc220x_UART_receive_data</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bsp_nuc220x_uart.o(.text.bsp_nuc220x_UART_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_nuc220x_UART_receive_data
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Process
</UL>

<P><STRONG><a name="[46]"></a>bsp_nuc220x_UART_send_data</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bsp_nuc220x_uart.o(.text.bsp_nuc220x_UART_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_nuc220x_UART_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Process
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PreProcess
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, retarget.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fputc &rArr; SendChar &rArr; SendChar_ToUART
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = main &rArr; bsp_nu220x_systems_init &rArr; SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Process
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PreProcess
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Enable_APROM_Update
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systems_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_send_data
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nuc220x_UART_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6b]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7d]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7f]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[52]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
</UL>

<P><STRONG><a name="[3a]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[80]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[81]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[82]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5a]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, bsp_nuc220x_system.o(.text.NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
</UL>

<P><STRONG><a name="[67]"></a>NVIC_SetPriority</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bsp_nuc220x_system.o(.text.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
</UL>

<P><STRONG><a name="[64]"></a>SYS_UnlockReg</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, bsp_nuc220x_system.o(.text.SYS_UnlockReg))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systems_init
</UL>

<P><STRONG><a name="[61]"></a>TIMER_ClearIntFlag</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, bsp_nuc220x_system.o(.text.TIMER_ClearIntFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIMER_ClearIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>TIMER_EnableInt</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, bsp_nuc220x_system.o(.text.TIMER_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIMER_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SB_Timer1_Init
</UL>

<P><STRONG><a name="[60]"></a>TIMER_GetIntFlag</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_nuc220x_system.o(.text.TIMER_GetIntFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIMER_GetIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>TIMER_Start</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, bsp_nuc220x_system.o(.text.TIMER_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIMER_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_nu220x_systick_enable
</UL>

<P><STRONG><a name="[40]"></a>FMC_Erase</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, bsp_nuc220x_bootloader.o(.text.FMC_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PreProcess
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Mem_Write
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Update_Firmware_Handle
</UL>

<P><STRONG><a name="[3f]"></a>FMC_Read</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, bsp_nuc220x_bootloader.o(.text.FMC_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FMC_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PreProcess
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Update_Firmware_Handle
</UL>

<P><STRONG><a name="[42]"></a>FMC_SetVectorPageAddr</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, bsp_nuc220x_bootloader.o(.text.FMC_SetVectorPageAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FMC_SetVectorPageAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Update_Firmware_Handle
</UL>

<P><STRONG><a name="[41]"></a>FMC_Write</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_nuc220x_bootloader.o(.text.FMC_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PreProcess
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Mem_Write
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_Cmd_Update_Firmware_Handle
</UL>

<P><STRONG><a name="[4d]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, system_nuc200series.o(.text.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[24]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc200series.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc200series.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, clk.o(.text.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
</UL>

<P><STRONG><a name="[53]"></a>stackDump</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, retarget.o(.text.stackDump))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = stackDump &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
</UL>

<P><STRONG><a name="[4e]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, uart.o(.text.CLK_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLK_GetPLLClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
</UL>

<P><STRONG><a name="[6d]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[70]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6f]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
